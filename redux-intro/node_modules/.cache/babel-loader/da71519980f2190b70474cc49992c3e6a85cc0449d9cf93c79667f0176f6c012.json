{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nexport const INCREMENT = \"increment\";\nexport const DECREMENT = \"decrement\";\nexport const INCREASE = \"increase\";\nexport const TOGGLE_COUNTER = \"toggleCounter\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// const counterReducer = (\n// \tstate: CounterState = initialState,\n// \taction: CounterAction\n// ) => {\n// \tif (action.type === INCREMENT) {\n// \t\treturn {\n// \t\t\tcounter: state.counter + 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n// \tif (action.type === INCREASE) {\n// \t\treturn {\n// \t\t\tcounter: state.counter + (action.amount || 0),\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n// \tif (action.type === DECREMENT) {\n// \t\treturn {\n// \t\t\tcounter: state.counter - 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n// \tif (action.type === TOGGLE_COUNTER) {\n// \t\treturn {\n// \t\t\tcounter: state.counter,\n// \t\t\tshowCounter: !state.showCounter,\n// \t\t};\n// \t}\n// \treturn state;\n// };\n\n// const store = createStore(counterReducer);\n\n// export default store;\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter + 1;\n    },\n    decrement(state) {\n      state.counter - 1;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","INCREMENT","DECREMENT","INCREASE","TOGGLE_COUNTER","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterActions","actions"],"sources":["D:/repo/react-certification/redux-intro/src/store/index.ts"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nexport interface CounterState {\r\n\tcounter: number;\r\n\tshowCounter: boolean;\r\n}\r\n\r\nexport const INCREMENT = \"increment\";\r\nexport const DECREMENT = \"decrement\";\r\nexport const INCREASE = \"increase\";\r\nexport const TOGGLE_COUNTER = \"toggleCounter\";\r\n\r\nexport interface CounterAction {\r\n\ttype: string;\r\n\tamount?: number;\r\n}\r\nexport type counterActionType =\r\n\t| typeof INCREMENT\r\n\t| typeof DECREMENT\r\n\t| typeof INCREASE\r\n\t| typeof TOGGLE_COUNTER;\r\n\r\nconst initialState: CounterState = {\r\n\tcounter: 0,\r\n\tshowCounter: true,\r\n};\r\n\r\n// const counterReducer = (\r\n// \tstate: CounterState = initialState,\r\n// \taction: CounterAction\r\n// ) => {\r\n// \tif (action.type === INCREMENT) {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n// \tif (action.type === INCREASE) {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + (action.amount || 0),\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n// \tif (action.type === DECREMENT) {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter - 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n// \tif (action.type === TOGGLE_COUNTER) {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter,\r\n// \t\t\tshowCounter: !state.showCounter,\r\n// \t\t};\r\n// \t}\r\n// \treturn state;\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\n// export default store;\r\n\r\nconst counterSlice = createSlice({\r\n\tname: \"counter\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tincrement(state) {\r\n\t\t\tstate.counter + 1;\r\n\t\t},\r\n\t\tdecrement(state) {\r\n\t\t\tstate.counter - 1;\r\n\t\t},\r\n\t\tincrease(state, action) {\r\n\t\t\tstate.counter = state.counter + action.payload;\r\n\t\t},\r\n\t\ttoggleCounter(state) {\r\n\t\t\tstate.showCounter = !state.showCounter;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst store = configureStore({\r\n\treducer: counterSlice.reducer,\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAO9D,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,QAAQ,GAAG,UAAU;AAClC,OAAO,MAAMC,cAAc,GAAG,eAAe;AAY7C,MAAMC,YAA0B,GAAG;EAClCC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAMC,YAAY,GAAGT,WAAW,CAAC;EAChCU,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACTC,SAASA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACN,OAAO,GAAG,CAAC;IAClB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MAChBA,KAAK,CAACN,OAAO,GAAG,CAAC;IAClB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACpBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACvC;EACD;AACD,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGlB,cAAc,CAAC;EAC5BmB,OAAO,EAAEX,YAAY,CAACW;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;AAElD,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}